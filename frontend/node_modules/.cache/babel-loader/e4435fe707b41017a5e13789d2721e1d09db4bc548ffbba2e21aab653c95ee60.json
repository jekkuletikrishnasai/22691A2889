{"ast":null,"code":"const express = require('express');\nconst mongoose = require('mongoose');\nconst shortUrlRouter = require('./routes/shorturl');\nconst app = express();\napp.use(express.json());\napp.use('/shorturls', shortUrlRouter);\nconst db = mongoose.connect('mongodb://127.0.0.1:27017/url-shortener', {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n}).then(() => console.log('Connected to MongoDB')).then(() => app.listen(3000, () => console.log('Server running on port 3000'))).catch(err => console.log('connection error:', err));","map":{"version":3,"names":["express","require","mongoose","shortUrlRouter","app","use","json","db","connect","useNewUrlParser","useUnifiedTopology","then","console","log","listen","catch","err"],"sources":["C:/Users/krish/Downloads/22691A2889-main/22691A2889-main/frontend/src/index.js"],"sourcesContent":["const express = require('express');\nconst mongoose = require('mongoose');\nconst shortUrlRouter = require('./routes/shorturl');\nconst app = express();\n\napp.use(express.json());\napp.use('/shorturls', shortUrlRouter);\n\nconst db = mongoose.connect('mongodb://127.0.0.1:27017/url-shortener', {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n})\n.then(() => console.log('Connected to MongoDB'))\n.then(() => app.listen(3000, () => console.log('Server running on port 3000')))\n.catch(err => console.log('connection error:', err));"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAU,CAAC;AACpC,MAAME,cAAc,GAAGF,OAAO,CAAC,mBAAmB,CAAC;AACnD,MAAMG,GAAG,GAAGJ,OAAO,CAAC,CAAC;AAErBI,GAAG,CAACC,GAAG,CAACL,OAAO,CAACM,IAAI,CAAC,CAAC,CAAC;AACvBF,GAAG,CAACC,GAAG,CAAC,YAAY,EAAEF,cAAc,CAAC;AAErC,MAAMI,EAAE,GAAGL,QAAQ,CAACM,OAAO,CAAC,yCAAyC,EAAE;EACrEC,eAAe,EAAE,IAAI;EACrBC,kBAAkB,EAAE;AACtB,CAAC,CAAC,CACDC,IAAI,CAAC,MAAMC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC,CAAC,CAC/CF,IAAI,CAAC,MAAMP,GAAG,CAACU,MAAM,CAAC,IAAI,EAAE,MAAMF,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC,CAAC,CAAC,CAC9EE,KAAK,CAACC,GAAG,IAAIJ,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEG,GAAG,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}